name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 Server
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup SSH Key
      run: |
        echo "${{ secrets.KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Deploy via SSH
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.USERNAME }}@${{ secrets.HOST }} << EOF
          set -e
          cd ${{ secrets.APP_DIR }}

          echo "Stashing local changes..."
          git stash || echo "No changes to stash"

          echo "Pulling latest code..."
          git pull origin main

          echo "Installing dependencies..."
          bun install

          echo "Building the application..."
          bun run build

          echo "Ensuring PORT is set in environment..."
          if ! grep -q "PORT=" .env; then
            echo "PORT=3000" >> .env
            echo "Added PORT=3000 to .env file"
          fi

          echo "Stopping any existing PM2 processes..."
          bunx pm2 stop sichatas || echo "No process named sichatas to stop"
          bunx pm2 delete sichatas || echo "No process named sichatas to delete"

          echo "Starting application with PM2..."
          # Use next start for production mode with explicit port
          bunx pm2 start npm --name sichatas -- start -- --port 3000

          echo "Checking if application is running..."
          sleep 5
          if bunx pm2 list | grep -q "sichatas" && bunx pm2 show sichatas | grep -q "online"; then
            echo "✅ Application is running successfully!"
            echo "PM2 process details:"
            bunx pm2 show sichatas
          else
            echo "⚠️ Warning: Application might not be running properly"
            echo "Showing recent logs:"
            bunx pm2 logs sichatas --lines 20 || echo "No logs available"
          fi

          echo "Saving PM2 process list..."
          bunx pm2 save

          echo "Testing Nginx configuration..."
          sudo nginx -t && echo "✅ Nginx configuration is valid" || echo "❌ Nginx configuration has errors"

          echo "Reloading Nginx..."
          sudo systemctl reload nginx

          echo "Verifying server response..."
          curl -I http://localhost:3000 || echo "⚠️ Warning: Could not connect to application on port 3000"

          echo "Deployed to ${{ secrets.DOMAIN }} successfully!"
        EOF

    - name: Clean up
      run: rm -f private_key.pem