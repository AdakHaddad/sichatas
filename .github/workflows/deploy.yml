name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 Server
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup SSH Key
      run: |
        echo "${{ secrets.KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Deploy via SSH
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.USERNAME }}@${{ secrets.HOST }} << EOF
          set -e
          cd ${{ secrets.APP_DIR }}

          echo "Stashing local changes..."
          git stash || echo "No changes to stash"

          echo "Pulling latest code..."
          git pull origin main

          echo "Installing dependencies..."
          bun install

          echo "Building the application..."
          bun run build

          echo "Ensuring PORT is set in environment..."
          if ! grep -q "PORT=" .env; then
            echo "PORT=3000" >> .env
            echo "Added PORT=3000 to .env file"
          fi

          echo "Creating PM2 ecosystem config for better persistence..."
          cat > ecosystem.config.js << 'EOL'
          module.exports = {
            apps: [{
              name: "sichatas",
              script: "bun",
              args: "run start",
              watch: false,
              max_memory_restart: "500M",
              env: {
                NODE_ENV: "production",
                PORT: 3000
              },
              exp_backoff_restart_delay: 100,
              max_restarts: 10,
              restart_delay: 5000,
              autorestart: true
            }]
          }
          EOL

          echo "Stopping any existing PM2 processes..."
          bunx pm2 stop sichatas || echo "No process named sichatas to stop"
          bunx pm2 delete sichatas || echo "No process named sichatas to delete"

          echo "Starting application with PM2 using ecosystem config..."
          bunx pm2 start ecosystem.config.js

          echo "Checking if application is running..."
          sleep 5
          if bunx pm2 list | grep -q "sichatas" && bunx pm2 show sichatas | grep -q "online"; then
            echo "✅ Application is running successfully!"
            echo "PM2 process details:"
            bunx pm2 show sichatas
          else
            echo "⚠️ First start attempt failed, trying again with direct command..."
            bunx pm2 start bun --name sichatas -- run start
            
            sleep 3
            if ! bunx pm2 list | grep -q "sichatas"; then
              echo "❌ Failed to start application after multiple attempts"
              exit 1
            fi
          fi

          echo "Saving PM2 process list..."
          bunx pm2 save

          echo "Setting up PM2 to start on system boot..."
          # Generate startup script but don't execute it if it already exists
          bunx pm2 startup | grep -v PM2 | grep -v "already registered" > startup_script.sh || true
          if [ -s startup_script.sh ]; then
            chmod +x startup_script.sh
            sudo ./startup_script.sh
            rm startup_script.sh
            echo "✅ PM2 startup script installed"
          else
            echo "PM2 startup already configured"
          fi

          echo "Setting up cron job to periodically save PM2 process list..."
          CRON_JOB="*/30 * * * * cd ${{ secrets.APP_DIR }} && bunx pm2 save > /dev/null 2>&1"
          (crontab -l 2>/dev/null | grep -v "bunx pm2 save"; echo "\$CRON_JOB") | crontab -
          echo "✅ Cron job for PM2 save configured"

          echo "Creating process monitoring script..."
          cat > ~/monitor-sichatas.sh << 'EOL'
          #!/bin/bash
          
          # Check if sichatas is running
          if ! bunx pm2 list | grep -q sichatas; then
            cd ${{ secrets.APP_DIR }}
            bunx pm2 start ecosystem.config.js
            bunx pm2 save
            echo "\$(date): Restarted sichatas app" >> ~/sichatas-monitor.log
          fi
          EOL
          
          chmod +x ~/monitor-sichatas.sh
          
          # Add monitor script to crontab if not already present
          if ! crontab -l 2>/dev/null | grep -q "monitor-sichatas.sh"; then
            (crontab -l 2>/dev/null; echo "*/5 * * * * ~/monitor-sichatas.sh") | crontab -
            echo "✅ Monitoring cron job configured"
          else
            echo "Monitoring cron job already exists"
          fi

          echo "Testing Nginx configuration..."
          sudo nginx -t && echo "✅ Nginx configuration is valid" || echo "❌ Nginx configuration has errors"

          echo "Reloading Nginx..."
          sudo systemctl reload nginx || echo "Nginx not reloaded"

          echo "Verifying application response..."
          if curl -s http://localhost:3000 > /dev/null; then
            echo "✅ Application is responding on port 3000"
          else
            echo "⚠️ Application is not responding on port 3000"
            echo "PM2 logs:"
            bunx pm2 logs sichatas --lines 20
          fi

          echo "Deployed to ${{ secrets.DOMAIN }} successfully!"
        EOF

    - name: Clean up
      run: rm -f private_key.pem